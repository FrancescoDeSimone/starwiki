{"version":3,"sources":["Components/TabPanel.tsx","Components/DescriptionModal.tsx","Components/Carusel.tsx","App.tsx","index.tsx"],"names":["props","children","value","index","other","Box","role","hidden","id","aria-labelledby","sx","p","Typography","style","position","top","left","transform","width","bgcolor","border","boxShadow","data","open","handleClose","handleOpen","Modal","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","variant","component","Object","keys","mt","map","key","mobile","useMediaQuery","tablet","React","setData","nextData","setNextData","filter","setFilter","setOpen","fetchNextData","fetch","length","next","then","res","json","d","a","url","resp","window","visualViewport","innerWidth","get_data","TextField","mb","fullWidth","label","onChange","event","target","dataLength","reduce","acc","count","hasMore","loader","scrollableTarget","ImageList","cols","gap","margin","element","results","item","ImageListItem","onClick","src","srcSet","alt","loading","ImageListItemBar","title","DescriptionModal","toString","theme","useTheme","setValue","appbar","content","values","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","a11yProps","axis","direction","onChangeIndex","TabPanel","dir","Carusel","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.5c452c21.chunk.js","sourcesContent":["import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: number;\n    value: number;\n}\n\nexport default (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Box\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Backdrop from '@mui/material/Backdrop';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\ninterface IDescriptionModal {\n    data: any;\n    open: boolean;\n    handleOpen: any;\n    handleClose: any;\n}\n\nexport default (props: IDescriptionModal) => {\n    const { data, open, handleOpen, handleClose } = props\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Box sx={style}>\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                            {data[Object.keys(data)[0]]}\n                        </Typography>\n                        <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n                            {Object.keys(data).map((key: string) => <p>{key}:{data[key]}</p>)}\n                        </Typography>\n                    </Box>\n                </Fade>\n            </Modal>\n        </div>\n    );\n\n}\n\n","import * as React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/material';\nimport DescriptionModal from './DescriptionModal';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\n\ninterface ICarusel {\n    url: string;\n}\nexport default (props: ICarusel) => {\n    const mobile = useMediaQuery('(max-width:800px)');\n    const tablet = useMediaQuery('(max-width:1000px)');\n    const [data, setData] = React.useState<any>([]);\n    const [nextData, setNextData] = React.useState<any>(null);\n    const [filter, setFilter] = React.useState<string>(\"\");\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const fetchNextData =\n        (data: any) => fetch(data[data.length - 1].next)\n            .then(res => res.json())\n            .then(d => { setNextData(d); return d })\n\n    React.useEffect(() => {\n        const get_data = async () => {\n            let resp = await fetch(props.url + filter)\n            let d = await resp.json()\n            setData([d])\n            if (d.next && window.visualViewport.width >= window.innerWidth)\n                fetchNextData([d])\n                    .then(d => fetchNextData([d]))\n        }\n        get_data()\n    }, [filter])\n\n    React.useEffect(() => {\n        if (nextData != null)\n            setData([...data, nextData])\n\n    }, [nextData])\n\n    return (\n        <Box>\n            <TextField sx={{ mb: 5 }} fullWidth id=\"standard-basic\" label=\"Search...\" variant=\"standard\" onChange={(event) => setFilter(`?search=${event.target.value}`)} />\n            <InfiniteScroll\n                dataLength={data.reduce((acc: number, d: any) => acc += d.count, 0)}\n                next={() => fetchNextData(data)}\n                hasMore={data.length > 0 && data[data.length - 1].next != null}\n                loader={\"\"}\n                scrollableTarget=\"scrollableDiv\"\n\n            >\n                <ImageList cols={tablet ? 3 : mobile ? 2 : 4} gap={mobile ? 2 : 10} sx={{ margin: mobile ? 0 : 10 }}>\n                    {data.map((element: any) => element.results.map((item: any, index: number) => (\n                        <ImageListItem key={index.toString()} onClick={handleOpen}>\n                            <img\n                                src=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format\"\n                                srcSet=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format&dpr=2 2x\"\n                                alt={item[Object.keys(item)[0]]}\n                                loading=\"lazy\"\n                            />\n                            <ImageListItemBar\n                                title={item[Object.keys(item)[0]]}\n                            />\n                            <DescriptionModal data={item} open={open} handleOpen={handleOpen} handleClose={handleClose} />\n                        </ImageListItem>\n                    )))\n                    }\n                </ImageList >\n            </InfiniteScroll>\n        </Box >\n    )\n}\n","import * as React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport TabPanel from './Components/TabPanel'\nimport Carusel from './Components/Carusel'\n\n\nconst a11yProps = (index: number) => {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    }\n}\n\nexport default () => {\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n    const [data, setData] = React.useState({});\n\n    React.useEffect(() => {\n        fetch(\"https://swapi.dev/api\").then(resp => resp.json()).then(data => setData(data))\n    }, [data])\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n    const appbar: string[] = Object.keys(data)\n    const content: string[] = Object.values(data)\n    return (\n        <Box sx={{ bgcolor: 'background.paper' }}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    {appbar.map((data, index) => < Tab key={index} label={data} {...a11yProps(index)} />)}\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                {content.map((data, index) => <TabPanel value={value} index={index} dir={theme.direction} > <Carusel url={data}></Carusel></TabPanel>)}\n            </SwipeableViews>\n        </Box >\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}