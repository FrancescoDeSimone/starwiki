{"version":3,"sources":["Components/TabPanel.tsx","Components/DescriptionModal.tsx","Components/Carusel.tsx","App.tsx","index.tsx"],"names":["props","children","value","index","other","role","hidden","id","aria-labelledby","Box","sx","p","Typography","style","position","top","left","transform","width","bgcolor","border","boxShadow","data","open","handleClose","handleOpen","Modal","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","variant","component","Object","keys","mt","map","key","React","setData","setOpen","axios","get","url","then","resp","undefined","results","TextField","fullWidth","label","onChange","event","target","ImageList","cols","gap","margin","item","ImageListItem","onClick","src","srcSet","alt","loading","ImageListItemBar","title","DescriptionModal","toString","theme","useTheme","setValue","appbar","content","values","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","a11yProps","axis","direction","onChangeIndex","TabPanel","dir","Carusel","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.515ea0cc.chunk.js","sourcesContent":["import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: number;\n    value: number;\n}\n\nexport default (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Modal from '@mui/material/Modal';\nimport Fade from '@mui/material/Fade';\nimport Backdrop from '@mui/material/Backdrop';\n\nconst style = {\n    position: 'absolute' as 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4,\n};\n\n\ninterface IDescriptionModal {\n    data: any;\n    open: boolean;\n    handleOpen: any;\n    handleClose: any;\n}\n\nexport default (props: IDescriptionModal) => {\n    const { data, open, handleOpen, handleClose } = props\n\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <Box sx={style}>\n                        <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n                            {data[Object.keys(data)[0]]}\n                        </Typography>\n                        <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n                            {Object.keys(data).map((key: string) => <p>{key}:{data[key]}</p>)}\n                        </Typography>\n                    </Box>\n                </Fade>\n            </Modal>\n        </div>\n    );\n\n}\n\n","import * as React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport axios from 'axios';\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/material';\nimport DescriptionModal from './DescriptionModal';\n\n// import * as ddg from \"duckduckgo-images-api\"\n\ninterface ICarusel {\n    url: string;\n}\n\nexport default (props: ICarusel) => {\n    // ddg.image_search({ query: \"birds\", moderate: true }).then(results => console.log(results))\n\n    const [data, setData] = React.useState<any>({});\n\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const filtering = (event: any) => {\n        axios.get(`${props.url}?search=${event.target.value}`).then(resp => setData(resp.data))\n    }\n    React.useEffect(() => {\n        axios.get(props.url).then(resp => setData(resp.data))\n    }, [data])\n\n    return data.results != undefined ?\n        (\n            <Box>\n                <TextField fullWidth id=\"standard-basic\" label=\"Search...\" variant=\"standard\" onChange={filtering} />\n                <ImageList cols={4} gap={40} sx={{ margin: 10 }}>\n                    {data.results.map((item: any, index: number) => (\n                        <ImageListItem key={index.toString()} onClick={handleOpen}>\n                            <img\n                                src=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format\"\n                                srcSet=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format&dpr=2 2x\"\n                                alt={item[Object.keys(item)[0]]}\n                                loading=\"lazy\"\n                            />\n                            <ImageListItemBar\n                                title={item[Object.keys(item)[0]]}\n                            />\n                            <DescriptionModal data={item} open={open} handleOpen={handleOpen} handleClose={handleClose} />\n                        </ImageListItem>\n                    ))\n                    }\n                </ImageList >\n            </Box >\n        ) :\n        null\n}\n","import * as React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport TabPanel from './Components/TabPanel'\nimport Carusel from './Components/Carusel'\nimport axios from \"axios\"\n\n\nconst a11yProps = (index: number) => {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    }\n}\n\nexport default () => {\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n    const [data, setData] = React.useState({});\n\n    React.useEffect(() => {\n        axios.get(\"https://swapi.dev/api\").then(resp => setData(resp.data))\n    }, [data])\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n    const appbar: string[] = Object.keys(data)\n    const content: string[] = Object.values(data)\n    return (\n        <Box sx={{ bgcolor: 'background.paper' }}>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    {appbar.map((data, index) => < Tab key={index} label={data} {...a11yProps(index)} />)}\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                {content.map((data, index) => <TabPanel value={value} index={index} dir={theme.direction} > <Carusel url={data}></Carusel></TabPanel>)}\n            </SwipeableViews>\n        </Box >\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}