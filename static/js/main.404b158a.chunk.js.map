{"version":3,"sources":["Pages/DetailPage.tsx","Components/TabPanel.tsx","utils.tsx","Components/Carusel.tsx","Pages/Main.tsx","App.tsx","index.tsx"],"names":["state","useLocation","Object","keys","filter","key","forEach","k","AppBar","position","Toolbar","Link","href","style","color","ArrowBack","Typography","variant","component","sx","flexGrow","mx","CssBaseline","Container","maxWidth","Box","height","map","fontWeight","item","console","log","Array","isArray","reduce","res","el","slice","props","children","value","index","other","role","hidden","id","aria-labelledby","p","isURL","uri","url","URL","e","protocol","mobile","useMediaQuery","tablet","React","data","setData","nextData","setNextData","setFilter","fetchNextData","fetch","length","next","then","json","d","navigate","useNavigate","a","resp","window","visualViewport","width","innerWidth","get_data","TextField","mb","fullWidth","label","onChange","event","target","dataLength","acc","count","hasMore","loader","scrollableTarget","ImageList","cols","gap","margin","element","results","ImageListItem","onClick","toSend","toString","split","c","goTo","src","srcSet","alt","loading","ImageListItemBar","title","theme","useTheme","setValue","appbar","content","values","bgcolor","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","allProps","axis","direction","onChangeIndex","TabPanel","dir","Carusel","useRoutes","path","Main","DetailPage","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.404b158a.chunk.js","sourcesContent":["import { ArrowBack } from '@mui/icons-material';\nimport { AppBar, Box, Button, Container, CssBaseline, Icon, IconButton, Link, Toolbar, Typography } from '@mui/material';\nimport * as React from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport isURL from '../utils';\n\n\nconst printVal = (item: any) => {\n    console.log(item, typeof item)\n    if (!Array.isArray(item))\n        return item\n    const text = item.reduce((res: string, el: any) => res += el[0][Object.keys(el[0])[0]] + \" ,\", \"\")\n    return text.slice(0, -1)\n}\n\nexport default () => {\n    const { state } = useLocation();\n\n    [...Object.keys(state).filter((key: string) => state[key] == \"\"),\n        \"url\",\n        \"created\",\n        \"edited\"].forEach((k: string) => delete state[k]) //remove all data missing or not userfull \n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Link href=\"/starwiki\" style={{\n                        color: 'white'\n                    }}><ArrowBack></ArrowBack></Link>\n\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, mx: 3 }}>\n                        {state[Object.keys(state)[0]]}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <CssBaseline />\n            < Container maxWidth=\"sm\">\n                <Box sx={{\n                    height: '100vh'\n                }}>\n                    {Object.keys(state).map((key: string) =>\n                        <p>\n                            <span style={{ fontWeight: 'bold' }}>{key}: </span> {printVal(state[key])}\n                        </p>\n                    )\n                    }\n                </Box>\n            </Container>\n        </React.Fragment >\n    )\n}\n","import Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: number;\n    value: number;\n}\n\nexport default (props: TabPanelProps) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Box\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box sx={{ p: 3 }}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </Box>\n    );\n}\n","\nconst isURL = (uri: string) => {\n    let url\n    try {\n        url = new URL(uri)\n\n    } catch (e) {\n        return false\n    }\n    return url.protocol === 'http:' || url.protocol === 'https:'\n\n}\n\nexport default isURL\n","import * as React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport TextField from '@mui/material/TextField';\nimport { Box } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useNavigate } from 'react-router-dom';\nimport isURL from '../utils';\n\n\ninterface ICarusel {\n    url: string;\n}\nexport default (props: ICarusel) => {\n    const mobile = useMediaQuery('(max-width:800px)');\n    const tablet = useMediaQuery('(max-width:1000px)');\n    const [data, setData] = React.useState<any>([]);\n    const [nextData, setNextData] = React.useState<any>(null);\n    const [filter, setFilter] = React.useState<string>(\"\");\n\n    const fetchNextData =\n        (data: any) => fetch(data[data.length - 1].next)\n            .then(res => res.json())\n            .then(d => { setNextData(d); return d })\n\n    const navigate = useNavigate()\n\n    const goTo = (data: any) => {\n        let toSend = { ...data }\n        let keys = Object.keys(data).filter((key: any) => isURL(data[key]))\n        keys.forEach(k => toSend[k] = [])\n        keys.forEach((k: any) => {\n            data[k].toString().split(\",\")\n                .map((el: any) => fetch(el)\n                    .then((res: any) => res.json()).then((c: any) => {\n                        toSend[k] = [...toSend[k], [c]]\n                        console.log(toSend)\n                    }).then(() => navigate('/detail', { state: toSend })\n                    ))\n        }\n        )\n    }\n\n    React.useEffect(() => {\n        const get_data = async () => {\n            let resp = await fetch(props.url + filter)\n            let d = await resp.json()\n            setData([d])\n            if (d.next && window.visualViewport.width >= window.innerWidth)\n                fetchNextData([d])\n                    .then(d => fetchNextData([d]))\n        }\n        get_data()\n    }, [filter])\n\n    React.useEffect(() => {\n        if (nextData != null)\n            setData([...data, nextData])\n\n    }, [nextData])\n\n    return (\n        <Box>\n            <TextField sx={{ mb: 5 }} fullWidth id=\"standard-basic\" label=\"Search...\" variant=\"standard\" onChange={(event) => setFilter(`?search=${event.target.value}`)} />\n            <InfiniteScroll\n                dataLength={data.reduce((acc: number, d: any) => acc += d.count, 0)}\n                next={() => fetchNextData(data)}\n                hasMore={data.length > 0 && data[data.length - 1].next != null}\n                loader={\"\"}\n                scrollableTarget=\"scrollableDiv\"\n\n            >\n                <ImageList cols={tablet ? 3 : mobile ? 2 : 4} gap={mobile ? 2 : 10} sx={{ margin: mobile ? 0 : 10 }}>\n                    {data.map((element: any) => element.results.map((item: any, index: number) => (\n                        <ImageListItem key={index.toString()} onClick={() => goTo(item)}>\n                            <img\n                                src=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format\"\n                                srcSet=\"https://wallpapercave.com/wp/nHaLQDm.gif?w=248&fit=crop&auto=format&dpr=2 2x\"\n                                alt={item[Object.keys(item)[0]]}\n                                loading=\"lazy\"\n                            />\n                            <ImageListItemBar\n                                title={item[Object.keys(item)[0]]}\n                            />\n                        </ImageListItem>\n                    )))\n                    }\n                </ImageList >\n            </InfiniteScroll>\n        </Box >\n    )\n}\n","import * as React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport TabPanel from '../Components/TabPanel'\nimport Carusel from '../Components/Carusel'\nimport { Toolbar, Typography } from '@mui/material';\n\nconst allProps = (index: number) => {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    }\n}\n\nexport default () => {\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n    const [data, setData] = React.useState({});\n\n    React.useEffect(() => {\n        fetch(\"https://swapi.dev/api\").then(resp => resp.json()).then(data => setData(data))\n    }, [data])\n\n    const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n    const appbar: string[] = Object.keys(data)\n    const content: string[] = Object.values(data)\n    return (\n        <Box sx={{ bgcolor: 'background.paper' }}>\n\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        StarWiki\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <AppBar position=\"static\">\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"secondary\"\n                    textColor=\"inherit\"\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    {appbar.map((data, index) => < Tab key={index} label={data} {...allProps(index)} />)}\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                {content.map((data, index) => <TabPanel value={value} index={index} dir={theme.direction} > <Carusel url={data}></Carusel></TabPanel>)}\n            </SwipeableViews>\n        </Box >\n    );\n}\n\n","import {\n    BrowserRouter as Router,\n    Routes,\n    Route,\n    useRoutes,\n} from \"react-router-dom\";\nimport DetailPage from \"./Pages/DetailPage\";\nimport Main from \"./Pages/Main\";\n\nexport default () =>\n    useRoutes([\n        { path: \"/\", element: <Main /> },\n        { path: \"starwiki\", element: <Main /> },\n        { path: \"detail\", element: <DetailPage /> },\n    ]);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App />\n        </Router>\n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}